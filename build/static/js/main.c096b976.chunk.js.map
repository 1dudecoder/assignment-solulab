{"version":3,"sources":["useNetworkStatus.js","App.js","index.js"],"names":["useNetworkStatus","useState","navigator","onLine","status","setStatus","useEffect","setOnline","setOffline","window","addEventListener","removeEventListener","App","low","setLow","mypercentage","setMypercentage","high","setHigh","volume","setVolume","lastPrice","setLastPrice","dailyChangeRelative","setdailyChangeRelative","reconnect","setReconnect","separator","numb","str","toString","split","replace","join","console","log","ws","WebSocket","subscribe","JSON","stringify","event","channel","symbol","onopen","send","onmessage","arr","newarr","parse","Array","isArray","notstring","parseInt","toFixed","datavalidation","data","onerror","e","message","close","className","src","alt","width","hight","style","textDecoration","color","display","alignItems","justifyContent","marginTop","onClick","M","toast","html","classes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c096b976.chunk.js","sourcesContent":["import {useEffect,useState} from \"react\"\r\n\r\nconst useNetworkStatus = () => {\r\n    const [status, setStatus] = useState(navigator.onLine);\r\n\r\n    useEffect(()=>{\r\n        \r\n        const setOnline = () => {\r\n            setStatus(true);\r\n        }\r\n\r\n        const setOffline = () => {\r\n            setStatus(false);\r\n        }\r\n\r\n        window.addEventListener(\"online\", setOnline);\r\n        window.addEventListener(\"offline\", setOffline);\r\n        \r\n        return () => {\r\n            window.removeEventListener(\"online\", setOnline);\r\n            window.removeEventListener(\"offline\", setOffline);\r\n        }\r\n\r\n    },[]);\r\n\r\n    return status;\r\n\r\n}\r\n\r\nexport default useNetworkStatus;","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport M from \"materialize-css\"\nimport useNetworkStatus from \"./useNetworkStatus\";\n\nfunction App() {\n\n  const [low, setLow] = useState(0);\n  const [mypercentage, setMypercentage] = useState(0);\n  const [high, setHigh] = useState(0);\n  const [volume, setVolume] = useState(0);\n  const [lastPrice, setLastPrice] = useState(0);\n  const [dailyChangeRelative, setdailyChangeRelative] = useState(0);\n  const [reconnect, setReconnect] = useState(true);\n  const status = useNetworkStatus();\n\n  console.log(status)\n  \n  function separator(numb) {\n    var str = numb.toString().split(\".\");\n    str[0] = str[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    return str.join(\".\");\n  }\n\n  function datavalidation(arr) {\n    let newarr = JSON.parse(arr);\n    if (Array.isArray(newarr)) {\n      console.log(\"hellow bro\", newarr);\n      let notstring = newarr[1];\n      if (typeof notstring != \"string\") {\n        console.log(notstring);\n        setLow(notstring[9]);\n        setHigh(notstring[8]);\n        setVolume(parseInt(notstring[7]));\n        setLastPrice(parseInt(notstring[6]));\n        setdailyChangeRelative((notstring[4] * -1).toFixed(2));\n        setMypercentage(notstring[5]);\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (reconnect) {\n      const ws = new WebSocket(\"wss://api-pub.bitfinex.com/ws/2\");\n      let subscribe = JSON.stringify({\n        event: \"subscribe\",\n        channel: \"ticker\",\n        symbol: \"tBTCUSD\",\n      });\n\n      ws.onopen = () => {\n        ws.send(subscribe);\n      };\n\n      ws.onmessage = (event) => {\n        datavalidation(event.data);\n      };\n\n      ws.onerror = (e) => {\n        console.log(e.message);\n      };\n\n      return () => {\n        ws.close();\n      };\n    }\n  }, [reconnect,status]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"Container\">\n        <div className=\"tag-container\">\n          <div className=\"bit-logo\">\n            <img\n              src=\"https://www.pngkit.com/png/full/30-303629_cryptocurrency-ticker-cryptocurrency-ticker-at-master-white-bitcoin.png\"\n              alt=\"bitcoin\"\n              width=\"30\"\n              hight=\"30\"\n            />\n          </div>\n\n          <div className=\"titles\">\n            <h4>BTC/USD</h4>\n            <p>\n              VOL {separator(volume * lastPrice)}{\" \"}\n              <span style={{ textDecoration: \"underline\" }}>BTC</span>\n            </p>\n            <p>Low {separator(low)}</p>\n          </div>\n        </div>\n\n        <div className=\"my-data\">\n          <p>{separator(lastPrice)}</p>\n\n          {\n            mypercentage * 100 > 0 ? <p style={{color:\"#01a781\"}}> { separator(dailyChangeRelative) } <span style={{color:\"#01a781\"}}>⏶</span> ({(mypercentage * 100).toFixed(2) * -1 }%) </p>    : <p style={{color:\"#e44b44\"}}> { separator(dailyChangeRelative)} <span style={{color:\"#e44b44\"}}>⏷</span> ({(mypercentage * 100).toFixed(2) * -1}%)</p> \n          }\n\n\n          <p>High {separator(high)}</p>\n        </div>\n      </div>\n\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-around\",\n          marginTop: \"5rem\",\n        }}\n      >\n        <button\n          onClick={() => {\n            setReconnect(true);\n            M.toast({html: 'CONNECTION RECONNECTED SUCCESFULL!',classes:\"blue\"})  \n            console.log(\"connection reconnected\");\n          }}\n        >\n          Connect\n        </button>\n        <button\n          onClick={() => {\n            setReconnect(false);\n            M.toast({html: 'CONNECTION DISCONNECTED SUCCESFULL!',classes:\"red\"})  \n            console.log(\"connection is closed\");\n          }}\n        >\n          Disconnect\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}